{"version":3,"sources":["logo.svg","layout/Header.js","images/upload.svg","component/Uploader.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","href","rel","target","Uploader","props","handleAcceptedDrop","file","blob","URL","createObjectURL","console","log","handleRejectedDrop","setState","state","showError","this","onDropAccepted","onDropRejected","accept","getRootProps","getInputProps","upload","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAAe,MAA0B,iCCkB1BA,MAhBf,WACE,OACE,iCACE,sBAAKC,UAAU,YAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKC,IAAKC,EAAMF,UAAU,OAAOG,IAAI,SACrC,6CAEF,qBAAKH,UAAU,iBAAf,SACE,mBAAGI,KAAK,uCAAuCC,IAAI,aAAaC,OAAO,SAAvE,SAAgF,qBAAKL,IAAI,2DAA2DE,IAAI,8B,oCCXnJ,MAA0B,mC,QCyC1BI,E,kDAnCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAIRC,mBAAqB,SAACC,GACpB,IAAMC,EAAOC,IAAIC,gBAAgBH,EAAK,IACtCI,QAAQC,IAAIJ,IAPK,EAUnBK,mBAAqB,WACnB,EAAKC,UAAS,SAAAC,GAAK,MAAK,CACtBC,WAAW,OAVb,EAAKD,MAAQ,CAACC,WAAU,GAFP,E,qDAiBjB,OACE,uBAAMnB,UAAU,YAAhB,UACGoB,KAAKF,MAAMC,UAAY,mBAAGnB,UAAU,UAAb,8CAA8D,KACtF,cAAC,IAAD,CAAUqB,eAAgBD,KAAKX,mBAAoBa,eAAgBF,KAAKJ,mBAAoBO,OAAO,wBAAnG,SACG,gBAAEC,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,cAAhB,OACC,8CAAKzB,UAAU,YAAewB,KAA9B,cACE,qCAAWC,MACX,qBAAKxB,IAAKyB,EAAQ1B,UAAU,cAAcG,IAAI,WAC9C,oGACA,+F,GA5BSwB,IAAMC,W,MCSdC,MATf,WACE,OACE,sBAAK7B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCIS8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f5409ea5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.b90240f8.svg\";","import logo from '../logo.svg';\n\nfunction Header() {\n  return (\n    <header>\n      <div className=\"container\">\n        <div className=\"logo-container\">\n          <img src={logo} className=\"logo\" alt=\"logo\" />\n          <h1>ZipEmote</h1>\n        </div>\n        <div className=\"link-container\">\n          <a href=\"https://www.buymeacoffee.com/matouio\" rel=\"noreferrer\" target=\"_blank\"><img src=\"https://cdn.buymeacoffee.com/buttons/v2/arial-yellow.png\" alt=\"Buy Me A Coffee\" /></a>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/upload.651df24b.svg\";","import upload from '../images/upload.svg';\nimport React from \"react\";\nimport Dropzone from 'react-dropzone';\n\nclass Uploader extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {showError:false};\n  }\n\n  handleAcceptedDrop = (file) => {\n    const blob = URL.createObjectURL(file[0]);\n    console.log(blob);\n  }\n\n  handleRejectedDrop = () => {\n    this.setState(state => ({\n      showError: true\n    }));\n  }\n\n  render() {\n    return (\n      <main className=\"container\">\n        {this.state.showError ? <p className=\"warning\">Image type must be .jpeg or .png</p> : null }\n        <Dropzone onDropAccepted={this.handleAcceptedDrop} onDropRejected={this.handleRejectedDrop} accept=\"image/jpeg, image/png\">\n          {({getRootProps, getInputProps}) => (\n            <div className=\"uploader\" {...getRootProps()}>\n              <input {...getInputProps()} />\n              <img src={upload} className=\"upload-icon\" alt=\"Upload\" />\n              <label>Drag 'n' drop your image file here, or click to select an image</label>\n              <em>(Only *.jpeg and *.png images will be accepted)</em>\n            </div>\n          )}\n        </Dropzone>\n      </main>\n    );\n  }\n}\n\nexport default Uploader;\n","import Header from './layout/Header.js';\nimport Uploader from './component/Uploader.js';\nimport './css/styles.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Uploader/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}