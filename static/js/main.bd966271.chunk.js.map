{"version":3,"sources":["images/zipemote.svg","layout/Header.js","images/upload.svg","component/Uploader.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","href","rel","target","Uploader","props","handleReset","originalImage","resizedImageArray","zip","JSZip","setState","state","imageResized","showError","handleDownload","console","log","generateAsync","type","then","content","saveAs","Date","now","handleRejectedDrop","handleAcceptedDrop","file","a","URL","createObjectURL","resizeFile","blob","Promise","all","sizeArray","map","size","resolve","Resizer","imageFileResizer","uri","push","this","preview","onClick","onDropAccepted","onDropRejected","accept","getRootProps","getInputProps","upload","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd966271.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/zipemote.f03f571a.svg\";","import logo from '../images/zipemote.svg';\n\nfunction Header() {\n  return (\n    <header>\n      <div className=\"container\">\n        <div className=\"logo-container\">\n          <img src={logo} className=\"logo\" alt=\"logo\" />\n          <h1>ZipEmote</h1>\n        </div>\n        <div className=\"link-container\">\n          <a href=\"https://www.buymeacoffee.com/matouio\" rel=\"noreferrer\" target=\"_blank\"><img src=\"https://cdn.buymeacoffee.com/buttons/v2/arial-yellow.png\" alt=\"Buy Me A Coffee\" /></a>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/upload.651df24b.svg\";","import upload from '../images/upload.svg';\nimport React from \"react\";\nimport Dropzone from 'react-dropzone';\nimport Resizer from 'react-image-file-resizer';\nimport JSZip from 'jszip';\nimport { saveAs } from 'file-saver';\n\nclass Uploader extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      showError:false,\n      imageResized: false\n    };\n    this.originalImage = '';\n    this.resizedImageArray = [];\n    this.sizeArray = [28,56,112];\n    this.zip = new JSZip();\n  }\n\n  handleReset = () => {\n    this.originalImage = '';\n    this.resizedImageArray = [];\n    this.zip = new JSZip();\n    this.setState(state => ({\n      imageResized: false,\n      showError: false\n    }));\n  }\n\n  handleDownload = () => {\n    console.log(this.zip)\n    this.zip.generateAsync({type:\"blob\"}).then((content) => {\n      saveAs(content, `${Date.now()}.zip`);\n    });\n  }\n\n  handleRejectedDrop = () => {\n    this.setState(state => ({\n      showError: true\n    }));\n  }\n\n  handleAcceptedDrop = async (file) => {\n    this.originalImage = URL.createObjectURL(file[0]);\n    await this.resizeFile(file[0]);\n\n    this.setState(state => ({\n      imageResized: true\n    }));\n  }\n\n  resizeFile = async (blob) => {\n    this.resizedImageArray = [];\n    this.setState(state => ({\n      imageResized: false\n    }));\n\n    await Promise.all(this.sizeArray.map((size) => {\n      return new Promise((resolve) => {\n        Resizer.imageFileResizer(blob, size, size, 'PNG', 100, 0, uri => resolve(this.resizedImageArray.push(uri)), 'base64');\n        this.zip.file(`${size}.png`, blob);\n      });\n    }));\n  }\n\n  render() {\n    return (\n      <main className=\"container\">\n        {this.state.showError ? <p className=\"warning\">Image type must be .jpeg or .png</p> : null }\n        <div className=\"uploader\">\n        {!this.state.imageResized ?\n          <Dropzone onDropAccepted={this.handleAcceptedDrop} onDropRejected={this.handleRejectedDrop} accept=\"image/jpeg, image/png\">\n            {({getRootProps, getInputProps}) => (\n              <div className=\"uploader__form\" {...getRootProps()}>\n                <input {...getInputProps()} />\n                <img src={upload} className=\"upload-icon\" alt=\"Upload\" />\n                <label>Drop your .png or .jpg file or click here!</label>\n              </div>\n            )}\n          </Dropzone>\n          :\n          <div className=\"preview\">\n            <span className=\"source\"><img src={this.originalImage} alt=\"Source\" className=\"source-image\"/></span>\n\n            <div className=\"preview__container\">\n              <ul className=\"preview-list\">\n                {this.resizedImageArray.map(preview => {\n                  return <li key={preview}><img src={preview} alt=\"preview\"/></li>\n                })}\n              </ul>\n              <div className=\"preview__buttons\">\n                <button onClick={this.handleDownload} className=\"get-zip\">Download .zip</button>\n                <button onClick={this.handleReset} className=\"secondary reset\">Reset</button>\n              </div>\n\n            </div>\n          </div>\n          }\n        </div>\n\n      </main>\n    );\n  }\n}\n\nexport default Uploader;\n","import Header from './layout/Header.js';\nimport Uploader from './component/Uploader.js';\nimport './css/styles.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Uploader/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}